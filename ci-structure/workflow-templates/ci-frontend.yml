# CI Pipeline for Frontend (Linting, Unit, E2E, and regression tests)
# Template for SkilledUp.Life frontend projects
# Place this file at .github/workflows/ci-frontend.yml in your frontend repository
# This workflow runs on pull requests to dev and main branches.
#
# üéØ CURRENT SETUP: Only linting and formatting (Phase 1)
# ‚úÖ ACTIVE: ESLint + Prettier checks
# üîÑ COMMENTED OUT: Unit tests, E2E tests, build checks (Phase 2)
# üìù TO ENABLE MORE: Uncomment the sections below when ready

name: CI Pipeline - Frontend

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Show ESLint fixable issues
        run: |
          echo "üîç Checking for ESLint issues that can be auto-fixed..."
          npx eslint src/ tests/ *.js --ext .js,.vue --fix --quiet --format compact || echo "‚ö†Ô∏è  Some issues need manual fixing - run 'npm run lint:fix' locally"

      - name: Check Prettier formatting
        run: npm run format

      - name: Show unformatted files (if any)
        run: |
          echo "üé® Checking for formatting issues..."
          npm run format:check || echo "‚ö†Ô∏è  Some files need formatting - run 'npm run format:fix' locally"

  # üß™ UNIT TESTS - PHASE 2 (COMMENTED OUT FOR NOW)
  # Uncomment this section when you're ready to add unit testing
  # test:
  #   name: Unit Tests
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #         cache: 'npm'
  #
  #     - name: Install dependencies
  #       run: npm ci
  #
  #     - name: Run unit tests
  #       run: npm run test:unit
  #       # ‚ö†Ô∏è IMPORTANT: You need to add this script to your package.json first!
  #       # Add this to your package.json "scripts" section:
  #       # "test:unit": "vitest --config tests/config/vitest.config.js"
  #
  #     - name: Upload coverage reports
  #       uses: codecov/codecov-action@v3
  #       if: success()
  #       with:
  #         file: ./coverage/lcov.info
  #         flags: frontend-unit
  #         name: frontend-coverage

  # üé≠ E2E TESTS - PHASE 2 (COMMENTED OUT FOR NOW)
  # Uncomment this section when you're ready to add end-to-end testing
  # e2e:
  #   name: E2E Tests
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #         cache: 'npm'
  #
  #     - name: Install dependencies
  #       run: npm ci
  #
  #     - name: Install Playwright browsers
  #       run: npx playwright install --with-deps
  #
  #     - name: Run E2E tests
  #       run: npm run test:e2e
  #       # ‚ö†Ô∏è IMPORTANT: You need to add this script to your package.json first!
  #       # Add this to your package.json "scripts" section:
  #       # "test:e2e": "playwright test --config tests/config/playwright.config.js"
  #
  #     - name: Upload E2E test results
  #       uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30

  # üèóÔ∏è BUILD CHECK - PHASE 2 (COMMENTED OUT FOR NOW)
  # Uncomment this section when you want to verify builds work
  # build:
  #   name: Build Check
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #         cache: 'npm'
  #
  #     - name: Install dependencies
  #       run: npm ci
  #
  #     - name: Build application
  #       run: npm run build
  #       # ‚ö†Ô∏è IMPORTANT: You need to have a "build" script in your package.json!
  #       # Most Vue projects already have: "build": "vite build"
  #
  #     - name: Upload build artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: build-files
  #         path: dist/
  #         retention-days: 7